

1. splice functionj syntax:

 	array.splice(where to add, how many to remove, what to add)

2. splice changes the array in original variable and gives the removed elements in its own variable

3. slice does not change the original array variable, and saves the sliced array in its own variable

	slice syntax:   array.slice(start index, end index) //end index is not included

4. only one argument in slice is starting index and output will give elements from that index to the end

5. other functions for arrays like: filter(), fuind(), indexOf(), lastIndexOf(), map(), reverse(), sort()

6. escape characters to manuplate strings 


7. Funcitons for string manipulation like : toLowerCase(), toUpperCase(), slice(), indexOf(), lastIndexOf(), charAt(), replace(), split()

8. indexOf() gives the index number of specidfied string inside bigger string, if not found return -1.

9. syntax indexOf("string to find index of", to find search from index)

10. lastIndexOf() is similar to indexOf() but difference is that lastindex starts search from last to first index

11. charAt() to get character at an index.

12. replace() replaces the character with given charcter
	syntax: replace(string to be replace, new string to place.
 It does not change orgininal variable

13. in replace(), only first string is replaced, in order to replace rest of duplicates of same string, put global flag /g with the string and remove the quotations like /hello/g,

14. Similarly, to replace similar strings with different cases, use i flag like /hello/i

16 split("character on which string will be divided") on string gives an array of that string with elements equal to the string characters divided at the provided character.


17 Math class has many functions for mathermatical operations

18. Math.round() , rounds off the values normally.

19 MAth.ceil() rounds off only to higher number like 5.6 to 6 and 5.3 to 6 as well.

20. Math.floor() rounds off to lower number only like 5.6 to 5 and 5.2 to 5 as well

21. MAth.random() gives number randomly between 0 to 1, excluding 1

22. other math functions like Math.pow(), Math.sqrt(), Math.abs(), Math.sin(), Math.cos(), Math.min(), Math.max(), Math.exp(), Math.log()

23. Math.toFixed(3) will round off the number to three decimal places

24. Date object gives current date and time according to that of your pc. It has many functions and its variable is initialized with new keyword like var dat = new Date()

25. passing a date string inside Date object will display that passed date 

26. Epoch time is the time from which all computer systems measure time which is 1st January 1970

27. Unix time is the time in miliseconds passed till today since Epoch time or 1st January 1970 00:00:00 

28. zero passed to date object gives epoch time

29. getYear(), getMonth, getDay() methods are used to call or modify the part of the full date object

30. similarly to modify a date part, use methods of setYear, setMonth(), setDay() etc

31. Functions have code that can be called later on by its name and whole code is not needed to be written again and again

32. Parameters are expected values that function will recieve and arguements aer the valeus that are sent to those paraments

33. TO return a value from function use return keyword, when retunr keyword is reached, code exits the function with the returned value

34. If no value is returned, then by default a javascript functions return undefined value.

35. More agruements can be passed to a funtion than used inside, unused arguements will return as undefined.

36. Any kind of values can be passed to agruements to function.

37. variable defined without var keyword will always be global variable even if it is defined inside a function, it will still be callable outside that function

38. variables with var keyword will be local if defined inside a function and only usable within that function

39. function can be saved into a variable as funct = function () { //code}; function saqved in variable funct

40. Javascript has default Hoisting feature, it means variables and functions can also be used before their definition in code.

41. if arguements passed with different name to the function where parameter name is different then changes to that paarmeter inside the funtion will not be visible in the original arguement outside function(in case of variables), in case of arrays and dictionaries change will be visible.

42. recursive function calls itself inside itself to act like a loop

done

